# SConscript for himan unit-tests

Import('env')
import os
import sys

cuda_toolkit_path = '/usr/local/cuda'

if os.environ.get('CUDA_TOOLKIT_PATH') is None:
        print "Environment variable CUDA_TOOLKIT_PATH not set, assuming " + cuda_toolkit_path
	os.environ['CUDA_TOOLKIT_PATH'] = cuda_toolkit_path
else:
        cuda_toolkit_path = os.environ['CUDA_TOOLKIT_PATH']

have_cuda = False

if os.path.isfile(cuda_toolkit_path + '/lib64/libcudart.so'):
        have_cuda = True

if have_cuda:
        env.Tool('cuda')

objects = []

for file in Glob('source/*.cpp'):
        s=os.path.basename(str(file)).replace(".cpp","")

        # Compile cuda_driver only with CUDA tests
        # (empty file for placing boost unit test main())
        if s != 'cuda_driver':
                obj='obj/'+ s
	        objects = env.Object(obj, file)
                env.Program(target = s, source = objects)
                

if have_cuda:
        # boost unit test main()
        # Otherwise scons fails to link CUDA object files
        cuda_drv_src = 'source/cuda_driver.cpp'
        cuda_drv_obj = 'obj/cuda_driver.o'
        cuda_drv = env.Object(cuda_drv_obj, cuda_drv_src)
        
        for file in Glob('source/*.cu'):
                s = os.path.basename(str(file)).replace(".cu", "")
                obj='obj/cu_' + s
                objects = env.Object(obj, file)
                env.Program(target = s + '_cuda', source = [cuda_drv, objects])
